{
  "name": "penca",
  "version": "0.0.0",
  "description": "Microservice for the templates",
  "engineStrict": true,
  "engines": {
    "node": ">= 6.9.0"
  },
  "dependencies": {
    "aws-sdk": "=2.107.0",
    "lodash": "^4.17.4",
    "moment": "=2.18.1",
    "moment-timezone": "^0.5.17",
    "npm": "=5.6.0",
    "numeral": "^2.0.6",
    "typescript": "~2.2.1",
    "uuid": "=3.0.1",
    "crypto": "=1.0.1",
    "install": "=0.10.1",
    "jsonwebtoken": "=8.1.0",
    "axios": "0.18.0"
  },
  "devDependencies": {
    "@types/jest": "~19.2.2",
    "@types/node": "~6.0.65",
    "tslib": "~1.6.0",
    "babel-cli": "=6.24.0",
    "babel-core": "=6.23.1",
    "babel-eslint": "=7.1.1",
    "babel-jest": "=19.0.0",
    "babel-loader": "=6.3.2",
    "babel-plugin-syntax-flow": "=6.18.0",
    "babel-plugin-transform-flow-strip-types": "=6.22.0",
    "babel-polyfill": "=6.9.1",
    "babel-preset-es2015": "=6.24.0",
    "babel-preset-react": "=6.23.0",
    "json-loader": "=0.5.4",
    "nodemon": "=1.11.0",
    "regenerator-runtime": "=0.10.3",
    "rimraf": "~2.6.1",
    "ts-jest": "=19.0.6",
    "ts-loader": "=2.0.3",
    "tslint": "~4.5.1",
    "tslint-microsoft-contrib": "~4.0.0",
    "webpack": "=1.13.1"
  },
  "scripts": {
    "clean": "rimraf coverage build tmp dist",
    "build": "npm run clean; tsc -p tsconfig.release.json; cp -R serverless.yml ./dist/src/; cp -R package.json ./dist/src/; cd dist/src/; npm install --production",
    "watch": "tsc -w -p tsconfig.release.json",
    "lint": "tslint -t stylish '{src,__tests__}/**/*.{ts,tsx}'",
    "pretest": "npm run lint",
    "test": "npm run test-only",
    "test-only": "jest --coverage",
    "test:watch": "jest --watch",
    "compile": "./node_modules/.bin/webpack"
  },
  "author": "TangoCode",
  "jest": {
    "testEnvironment": "node",
    "transform": {
      ".(ts|tsx)": "<rootDir>/preprocessor.js"
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx"
    ],
    "testRegex": "(/__tests__/.*|\\.(test|spec))\\.(ts|tsx|js)$",
    "coverageDirectory": "coverage",
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx,js,jsx}",
      "!src/**/*.d.ts"
    ]
  }
}
